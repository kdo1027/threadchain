{"ast":null,"code":"import _toConsumableArray from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/khanhdo/Documents/threadchain/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/khanhdo/Documents/threadchain/social-network/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Navbar from './NavBar.js';\nimport Main from './Main';\nimport { create } from 'ipfs-http-client';\nimport axios from 'axios';\nvar pinataApiKey = '6c57ab8e116eba326e6c';\nvar pinataSecretApiKey = '5fb4e49e3db16b2a41f090cef5767ad1dfca8d40b26aef9fa7835ce056909072';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, socialNetwork, postCount, i, post;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // Network ID\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = SocialNetwork.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address);\n                this.setState({\n                  socialNetwork: socialNetwork\n                });\n                _context3.next = 14;\n                return socialNetwork.methods.postCount().call();\n\n              case 14:\n                postCount = _context3.sent;\n                this.setState({\n                  postCount: postCount\n                }); // Load Posts\n\n                i = 1;\n\n              case 17:\n                if (!(i <= postCount)) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 20;\n                return socialNetwork.methods.posts(i).call();\n\n              case 20:\n                post = _context3.sent;\n                this.setState({\n                  posts: [].concat(_toConsumableArray(this.state.posts), [post])\n                });\n\n              case 22:\n                i++;\n                _context3.next = 17;\n                break;\n\n              case 25:\n                // Sort posts. Show highest tipped posts first\n                this.setState({\n                  posts: this.state.posts.sort(function (a, b) {\n                    return b.tipAmount - a.tipAmount;\n                  })\n                });\n                this.setState({\n                  loading: false\n                });\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('SocialNetwork contract not deployed to detected network.');\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      buffer: null,\n      content: ''\n    };\n    _this.captureFile = _this.captureFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.uploadImage = _this.uploadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createPost = _this.createPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.tipPost = _this.tipPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"captureFile\",\n    value: function captureFile(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this2.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    } // createPost(content) {\n    //   this.setState({ loading: true })\n    //   this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account })\n    //   .once('receipt', (receipt) => {\n    //     this.setState({ loading: false })\n    //   })\n    // }\n\n  }, {\n    key: \"tipPost\",\n    value: function () {\n      var _tipPost = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id, tipAmount) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                this.state.socialNetwork.methods.tipPost(id).send({\n                  from: this.state.account,\n                  value: tipAmount\n                }).once('receipt', function (receipt) {\n                  _this3.setState({\n                    loading: false\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function tipPost(_x, _x2) {\n        return _tipPost.apply(this, arguments);\n      }\n\n      return tipPost;\n    }() // constructor(props) {\n    //   super(props)\n    //   this.state = {\n    //     account: '',\n    //     socialNetwork: null,\n    //     postCount: 0,\n    //     posts: [],\n    //     loading: true\n    //   }\n    //   this.createPost = this.createPost.bind(this)\n    //   this.tipPost = this.tipPost.bind(this)\n    // }\n\n  }, {\n    key: \"uploadImage\",\n    value: function () {\n      var _uploadImage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var url, data, response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n                data = new FormData();\n                data.append('file', new Blob([this.state.buffer]), 'image.png');\n                _context5.next = 5;\n                return axios.post(url, data, {\n                  maxContentLength: 'Infinity',\n                  headers: {\n                    'Content-Type': \"multipart/form-data; boundary=\".concat(data._boundary),\n                    'pinata_api_key': pinataApiKey,\n                    'pinata_secret_api_key': pinataSecretApiKey\n                  }\n                });\n\n              case 5:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response.data.IpfsHash);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function uploadImage() {\n        return _uploadImage.apply(this, arguments);\n      }\n\n      return uploadImage;\n    }()\n  }, {\n    key: \"createPost\",\n    value: function () {\n      var _createPost = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(content) {\n        var _this4 = this;\n\n        var imageHash;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.uploadImage();\n\n              case 2:\n                imageHash = _context6.sent;\n                this.state.socialNetwork.methods.createPost(content, imageHash).send({\n                  from: this.state.account\n                }).once('receipt', function (receipt) {\n                  _this4.setState({\n                    content: ''\n                  });\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function createPost(_x3) {\n        return _createPost.apply(this, arguments);\n      }\n\n      return createPost;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        posts: this.state.posts,\n        createPost: this.createPost,\n        tipPost: this.tipPost,\n        captureFile: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/khanhdo/Documents/threadchain/social-network/src/components/App.js"],"names":["React","Component","Web3","Identicon","SocialNetwork","Navbar","Main","create","axios","pinataApiKey","pinataSecretApiKey","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","socialNetwork","Contract","abi","address","methods","postCount","call","i","posts","post","state","sort","a","b","tipAmount","loading","props","buffer","content","captureFile","bind","uploadImage","createPost","tipPost","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","result","id","send","from","value","once","receipt","url","data","FormData","append","Blob","maxContentLength","headers","_boundary","response","IpfsHash","imageHash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Identicon from 'identicon.js';\nimport './App.css';\nimport SocialNetwork from '../abis/SocialNetwork.json'\nimport Navbar from './NavBar.js'\nimport Main from './Main'\nimport { create } from 'ipfs-http-client';\nimport axios from 'axios';\n\nconst pinataApiKey = '6c57ab8e116eba326e6c';\nconst pinataSecretApiKey = '5fb4e49e3db16b2a41f090cef5767ad1dfca8d40b26aef9fa7835ce056909072';\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = SocialNetwork.networks[networkId]\n    if(networkData) {\n      const socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address)\n      this.setState({ socialNetwork })\n      const postCount = await socialNetwork.methods.postCount().call()\n      this.setState({ postCount })\n      // Load Posts\n      for (var i = 1; i <= postCount; i++) {\n        const post = await socialNetwork.methods.posts(i).call()\n        this.setState({\n          posts: [...this.state.posts, post]\n        })\n      }\n      // Sort posts. Show highest tipped posts first\n      this.setState({\n        posts: this.state.posts.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n    } else {\n      window.alert('SocialNetwork contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      buffer: null,\n      content: ''\n    };\n\n    this.captureFile = this.captureFile.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n    this.createPost = this.createPost.bind(this);\n    this.tipPost = this.tipPost.bind(this);\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n    };\n  }\n\n  // createPost(content) {\n  //   this.setState({ loading: true })\n  //   this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account })\n  //   .once('receipt', (receipt) => {\n  //     this.setState({ loading: false })\n  //   })\n  // }\n\n  async tipPost(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.socialNetwork.methods.tipPost(id).send({ from: this.state.account, value: tipAmount })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {\n  //     account: '',\n  //     socialNetwork: null,\n  //     postCount: 0,\n  //     posts: [],\n  //     loading: true\n  //   }\n\n  //   this.createPost = this.createPost.bind(this)\n  //   this.tipPost = this.tipPost.bind(this)\n  // }\n\n  async uploadImage() {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append('file', new Blob([this.state.buffer]), 'image.png');\n\n    const response = await axios.post(url, data, {\n      maxContentLength: 'Infinity',\n      headers: {\n        'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n        'pinata_api_key': pinataApiKey,\n        'pinata_secret_api_key': pinataSecretApiKey\n      }\n    });\n\n    return response.data.IpfsHash;\n  }\n\n  async createPost(content) {\n    const imageHash = await this.uploadImage();\n    this.state.socialNetwork.methods.createPost(content, imageHash).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        this.setState({ content: '' });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              posts={this.state.posts}\n              createPost={this.createPost}\n              tipPost={this.tipPost}\n              captureFile={this.captureFile}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}